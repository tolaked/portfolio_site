{"ast":null,"code":"'use strict';\n\nObject.defineProperty(exports, '__esModule', {\n  value: true\n});\n\nvar React = require('react');\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\n\n\nfunction __rest(s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n}\n\nvar calculateTotalDuration = ({\n  duration = 0.3,\n  delay = 0,\n  overlay = 0\n}) => duration + delay - overlay || 0;\n\nfunction getSequenceId(sequenceIndex, sequenceId, defaultValue) {\n  if (sequenceId === undefined && sequenceIndex === undefined) return defaultValue || 0;\n  if (sequenceIndex && sequenceIndex >= 0) return sequenceIndex;\n  if (sequenceId) return sequenceId;\n  return 0;\n}\n\nconst {\n  useState,\n  useRef,\n  useEffect\n} = React;\nconst AnimateContext = React.createContext({\n  animationStates: {},\n  register: data => {}\n});\n\nfunction AnimateGroup(props) {\n  const {\n    play,\n    sequences = [],\n    children\n  } = props;\n  const [animationStates, setAnimationStates] = useState();\n  const animationsRef = useRef({});\n\n  const register = data => {\n    const {\n      sequenceIndex,\n      sequenceId\n    } = data;\n    if (sequenceId === undefined && sequenceIndex === undefined) return;\n    animationsRef.current[getSequenceId(sequenceIndex, sequenceId)] = data;\n  };\n\n  useEffect(() => {\n    const sequencesToAnimate = Array.isArray(sequences) && sequences.length ? sequences : Object.values(animationsRef.current);\n    const localAnimationState = {};\n    (play ? sequencesToAnimate : [...sequencesToAnimate].reverse()).reduce((previous, current, currentIndex) => {\n      const {\n        sequenceId,\n        sequenceIndex\n      } = current,\n            restAttributes = __rest(current, [\"sequenceId\", \"sequenceIndex\"]);\n\n      const {\n        duration: defaultDuration,\n        delay,\n        overlay\n      } = restAttributes;\n      const id = getSequenceId(sequenceIndex, sequenceId, currentIndex);\n      const duration = defaultDuration || 0.3;\n      const currentTotalDuration = calculateTotalDuration({\n        duration,\n        delay,\n        overlay\n      });\n      const totalDuration = currentTotalDuration + previous;\n      localAnimationState[id] = {\n        play,\n        pause: !play,\n        delay: currentIndex === 0 ? delay || 0 : delay ? currentTotalDuration : previous,\n        controlled: true\n      };\n      return totalDuration;\n    }, 0);\n    setAnimationStates(localAnimationState);\n  }, [play]);\n  return React.createElement(AnimateContext.Provider, {\n    value: {\n      animationStates,\n      register\n    }\n  }, children);\n}\n\nvar secToMs = ms => (ms || 0) * 1000;\n\nconst {\n  useEffect: useEffect$1,\n  useState: useState$1,\n  useRef: useRef$1,\n  useContext\n} = React;\n\nfunction Animate(props) {\n  const {\n    play,\n    children,\n    render,\n    start,\n    end,\n    complete = '',\n    onComplete,\n    delay = 0,\n    duration = 0.3,\n    easeType = 'linear',\n    sequenceId,\n    sequenceIndex\n  } = props;\n  const onCompleteTimeRef = useRef$1({});\n  const [style, setStyle] = useState$1(start || {});\n  const {\n    register,\n    animationStates = {}\n  } = useContext(AnimateContext);\n  const id = getSequenceId(sequenceIndex, sequenceId);\n  useEffect$1(() => {\n    if (sequenceIndex !== undefined && sequenceIndex >= 0 || sequenceId) register(props);\n  }, []);\n  useEffect$1(() => {\n    setStyle(Object.assign(Object.assign({}, play || (animationStates[id] || {}).play ? end : start), {\n      transition: `all ${duration}s ${easeType} ${parseFloat((animationStates[id] || {}).delay || delay)}s`\n    }));\n\n    if (play && (complete || onComplete)) {\n      onCompleteTimeRef.current = setTimeout(() => {\n        complete && setStyle(complete);\n        onComplete && onComplete();\n      }, secToMs(parseFloat((animationStates[id] || {}).delay || delay) + duration));\n    }\n\n    return () => {\n      // @ts-ignore\n      onCompleteTimeRef.current && clearTimeout(onCompleteTimeRef.current);\n    };\n  }, [id, animationStates, play, duration, easeType, delay, onComplete, start, end, complete]);\n  return render ? render({\n    style\n  }) : React.createElement(\"div\", {\n    style: style\n  }, children);\n}\n\nvar camelCaseToDash = camelCase => camelCase ? camelCase.replace(/[A-Z]/g, c => `-${c.toLowerCase()}`) : '';\n\nconst generateKeyframes = keyframes => {\n  const animationLength = keyframes.length;\n  return keyframes.reduce((previous, keyframe, currentIndex) => {\n    const keyframePercentage = animationLength === 2 ? currentIndex * 100 : parseFloat((100 / (animationLength - 1)).toFixed(2)) * currentIndex;\n\n    if (typeof keyframe === 'string') {\n      return `${previous} ${keyframePercentage}% {${keyframe}}`;\n    }\n\n    const keys = Object.keys(keyframe);\n\n    if (keys.length && isNaN(+keys[0])) {\n      const keyframeContent = keys.reduce((acc, key) => `${acc} ${camelCaseToDash(key)}: ${keyframe[key]};`, '');\n      return `${previous} ${keyframePercentage}% {${keyframeContent}}`;\n    }\n\n    return `${previous} ${Object.keys(keyframe)[0]}% {${Object.values(keyframe)[0]}}`;\n  }, '');\n};\n\nfunction createStyle({\n  keyframes,\n  animationName\n}) {\n  return `@keyframes ${animationName} {${generateKeyframes(keyframes)}}`;\n}\n\nfunction createTag({\n  keyframes,\n  animationName\n}) {\n  let styleTag = document.querySelector('style[data-id=rsi]');\n  let index = 0;\n\n  if (!styleTag) {\n    styleTag = document.createElement('style');\n    styleTag.setAttribute('data-id', 'rsi');\n    document.head.appendChild(styleTag);\n  }\n\n  try {\n    // @ts-ignore\n    index = styleTag.sheet.cssRules.length;\n  } catch (e) {\n    index = 0;\n  }\n\n  try {\n    // @ts-ignore\n    styleTag.sheet.insertRule(createStyle({\n      keyframes,\n      animationName\n    }), index);\n  } catch (e) {\n    console.error('react simple animate, error found during insert style ', e); // eslint-disable-line no-console\n  }\n\n  return {\n    styleTag,\n    index\n  };\n}\n\nvar createRandomName = () => `RSI-${Math.random().toString(36).substr(2, 9)}`;\n\nvar deleteRules = (sheet, deleteName) => {\n  const index = Object.values(sheet.cssRules).findIndex(({\n    name\n  }) => name === deleteName);\n  if (index >= 0) sheet.deleteRule(index);\n};\n\nvar getPlayState = pause => pause ? 'paused' : 'running';\n\nconst {\n  useRef: useRef$2,\n  useEffect: useEffect$2,\n  useContext: useContext$1,\n  useState: useState$2\n} = React;\n\nfunction AnimateKeyframes(props) {\n  const {\n    children,\n    play = false,\n    pause = false,\n    render,\n    duration = 0.3,\n    delay = 0,\n    easeType = 'linear',\n    direction = 'normal',\n    fillMode = 'none',\n    iterationCount = 1,\n    sequenceIndex,\n    keyframes,\n    sequenceId\n  } = props;\n  const animationNameRef = useRef$2({\n    forward: '',\n    reverse: ''\n  });\n  const controlled = useRef$2(false);\n  const styleTagRef = useRef$2({\n    forward: {\n      sheet: {}\n    },\n    reverse: {\n      sheet: {}\n    }\n  });\n  const id = getSequenceId(sequenceIndex, sequenceId);\n  const {\n    register,\n    animationStates = {}\n  } = useContext$1(AnimateContext);\n  const forceUpdate = useState$2(false)[1];\n  useEffect$2(() => {\n    animationNameRef.current.forward = createRandomName();\n    let result = createTag({\n      animationName: animationNameRef.current.forward,\n      keyframes\n    });\n    styleTagRef.current.forward = result.styleTag;\n    animationNameRef.current.reverse = createRandomName();\n    result = createTag({\n      animationName: animationNameRef.current.reverse,\n      keyframes: keyframes.reverse()\n    });\n    styleTagRef.current.reverse = result.styleTag;\n    register(props);\n    if (play) forceUpdate(true);\n    return () => {\n      deleteRules(styleTagRef.current.forward.sheet, animationNameRef.current.forward);\n      deleteRules(styleTagRef.current.reverse.sheet, animationNameRef.current.reverse);\n    };\n  }, []);\n  const animateState = animationStates[id] || {};\n  let pauseValue = false;\n\n  if (animateState.controlled && !controlled.current) {\n    pauseValue = animateState.pause;\n    if (!animateState.pause) controlled.current = true;\n  } else {\n    pauseValue = pause;\n  }\n\n  const style = {\n    animation: `${duration}s ${easeType} ${animateState.delay || delay}s ${iterationCount} ${direction} ${fillMode} ${getPlayState(pauseValue)} ${((animateState.controlled ? animateState.play : play) ? animationNameRef.current.forward : animationNameRef.current.reverse) || ''}`\n  };\n  return render ? render({\n    style\n  }) : React.createElement(\"div\", {\n    style: style || {}\n  }, children);\n}\n\nconst {\n  useState: useState$3,\n  useEffect: useEffect$3,\n  useRef: useRef$3\n} = React;\n\nfunction useAnimate(props) {\n  const {\n    start,\n    end,\n    complete,\n    onComplete,\n    delay = 0,\n    duration = 0.3,\n    easeType = 'linear'\n  } = props;\n  const transition = React.useMemo(() => `all ${duration}s ${easeType} ${delay}s`, [duration, easeType, delay]);\n  const [style, setStyle] = useState$3(Object.assign(Object.assign({}, start), {\n    transition\n  }));\n  const [isPlaying, setIsPlaying] = useState$3(false);\n  const onCompleteTimeRef = useRef$3();\n  const onCompleteCallbackRef = useRef$3(onComplete);\n  const playRef = useRef$3();\n  useEffect$3(() => {\n    onCompleteCallbackRef.current = onComplete;\n  }, [onComplete]);\n  useEffect$3(() => () => {\n    onCompleteTimeRef.current && clearTimeout(onCompleteTimeRef.current);\n  }, []);\n\n  if (!playRef.current) {\n    playRef.current = isPlay => {\n      setStyle(Object.assign(Object.assign({}, isPlay ? end : start), {\n        transition\n      }));\n      setIsPlaying(true);\n      onCompleteTimeRef.current = setTimeout(() => {\n        if (isPlay && (complete || onComplete)) {\n          complete && setStyle(complete);\n          onCompleteCallbackRef.current && onCompleteCallbackRef.current();\n        }\n\n        setIsPlaying(false);\n      }, secToMs(delay + duration));\n    };\n  }\n\n  return {\n    isPlaying,\n    style,\n    play: playRef.current\n  };\n}\n\nfunction useAnimateKeyframes(props) {\n  const {\n    duration = 0.3,\n    delay = 0,\n    easeType = 'linear',\n    direction = 'normal',\n    fillMode = 'none',\n    iterationCount = 1,\n    keyframes\n  } = props;\n  const animationNameRef = React.useRef({\n    forward: '',\n    reverse: ''\n  });\n  const styleTagRef = React.useRef({\n    forward: {\n      sheet: {}\n    },\n    reverse: {\n      sheet: {}\n    }\n  });\n  const {\n    register\n  } = React.useContext(AnimateContext);\n  const [isPlaying, setIsPlaying] = React.useState(true);\n  const [isPaused, setIsPaused] = React.useState(false);\n  const playRef = React.useRef();\n  React.useEffect(() => {\n    animationNameRef.current.forward = createRandomName();\n    let result = createTag({\n      animationName: animationNameRef.current.forward,\n      keyframes\n    });\n    styleTagRef.current.forward = result.styleTag;\n    animationNameRef.current.reverse = createRandomName();\n    result = createTag({\n      animationName: animationNameRef.current.reverse,\n      keyframes: keyframes.reverse()\n    });\n    styleTagRef.current.reverse = result.styleTag;\n    register(props);\n    return () => {\n      deleteRules(styleTagRef.current.forward.sheet, animationNameRef.current.forward);\n      deleteRules(styleTagRef.current.reverse.sheet, animationNameRef.current.reverse);\n    };\n  }, []);\n  playRef.current = playRef.current ? playRef.current : isPlay => {\n    setIsPlaying(isPlay);\n  };\n\n  const pause = isPaused => {\n    setIsPaused(isPaused);\n  };\n\n  const style = {\n    animation: `${duration}s ${easeType} ${delay}s ${iterationCount} ${direction} ${fillMode} ${getPlayState(isPaused)} ${(isPlaying ? animationNameRef.current.forward : animationNameRef.current.reverse) || ''}`\n  };\n  return {\n    style,\n    play: playRef.current,\n    pause,\n    isPlaying\n  };\n}\n\nconst {\n  useEffect: useEffect$4,\n  useState: useState$4,\n  useRef: useRef$4\n} = React;\n\nfunction createArrayWithNumbers(length) {\n  return Array.from({\n    length\n  }, () => null);\n}\n\nfunction useAnimateGroup(props) {\n  const {\n    sequences = []\n  } = props;\n  const defaultArray = createArrayWithNumbers(sequences.length).map((_, index) => props.sequences[index].start);\n  const [styles, setStyles] = useState$4(defaultArray);\n  const [isPlaying, setPlaying] = useState$4(false);\n  const animationNamesRef = useRef$4([]);\n  const styleTagRef = useRef$4([]);\n  const playRef = useRef$4();\n  useEffect$4(() => {\n    sequences.forEach(({\n      keyframes = false\n    }, i) => {\n      if (!Array.isArray(keyframes)) return;\n\n      if (!animationNamesRef.current[i]) {\n        animationNamesRef.current[i] = {};\n        styleTagRef.current[i] = {};\n      }\n\n      animationNamesRef.current[i].forward = createRandomName();\n      let result = createTag({\n        animationName: animationNamesRef.current[i].forward,\n        keyframes\n      });\n      styleTagRef.current[i].forward = result.styleTag;\n      animationNamesRef.current[i].reverse = createRandomName();\n      result = createTag({\n        animationName: animationNamesRef.current[i].reverse,\n        keyframes: keyframes.reverse()\n      });\n      styleTagRef.current[i].reverse = result.styleTag;\n    });\n    return () => {\n      Object.values(animationNamesRef).forEach(({\n        forward,\n        reverse\n      }, i) => {\n        if (!styleTagRef[i]) return;\n        deleteRules(styleTagRef[i].sheet, forward);\n        deleteRules(styleTagRef[i].sheet, reverse);\n      });\n    };\n  }, []);\n  playRef.current = playRef.current ? playRef.current : isPlay => {\n    let totalDuration = 0;\n    const animationRefWithOrder = isPlay ? animationNamesRef.current : [...animationNamesRef.current].reverse();\n    const styles = (isPlay ? sequences : [...sequences].reverse()).map((current, currentIndex) => {\n      const {\n        duration = 0.3,\n        delay = 0,\n        overlay,\n        keyframes,\n        iterationCount = 1,\n        easeType = 'linear',\n        direction = 'normal',\n        fillMode = 'none',\n        end = {},\n        start = {}\n      } = current;\n      const delayDuration = currentIndex === 0 ? delay : totalDuration;\n      const transition = `all ${duration}s ${easeType} ${delayDuration}s`;\n      totalDuration = calculateTotalDuration({\n        duration,\n        delay,\n        overlay\n      }) + totalDuration;\n      return keyframes ? {\n        animation: `${duration}s ${easeType} ${delayDuration}s ${iterationCount} ${direction} ${fillMode} running ${isPlay ? animationRefWithOrder[currentIndex].forward : animationRefWithOrder[currentIndex].reverse}`\n      } : Object.assign(Object.assign({}, isPlay ? end : start), {\n        transition\n      });\n    }); // @ts-ignore\n\n    setStyles(isPlay ? styles : [...styles].reverse());\n    setPlaying(!isPlaying);\n  };\n  return {\n    styles,\n    play: playRef.current,\n    isPlaying\n  };\n}\n\nexports.Animate = Animate;\nexports.AnimateGroup = AnimateGroup;\nexports.AnimateKeyframes = AnimateKeyframes;\nexports.useAnimate = useAnimate;\nexports.useAnimateGroup = useAnimateGroup;\nexports.useAnimateKeyframes = useAnimateKeyframes;","map":{"version":3,"sources":["/Users/adetolaakere/Desktop/portfolio_site/node_modules/react-simple-animate/dist/index.js"],"names":["Object","defineProperty","exports","value","React","require","__rest","s","e","t","p","prototype","hasOwnProperty","call","indexOf","getOwnPropertySymbols","i","length","calculateTotalDuration","duration","delay","overlay","getSequenceId","sequenceIndex","sequenceId","defaultValue","undefined","useState","useRef","useEffect","AnimateContext","createContext","animationStates","register","data","AnimateGroup","props","play","sequences","children","setAnimationStates","animationsRef","current","sequencesToAnimate","Array","isArray","values","localAnimationState","reverse","reduce","previous","currentIndex","restAttributes","defaultDuration","id","currentTotalDuration","totalDuration","pause","controlled","createElement","Provider","secToMs","ms","useEffect$1","useState$1","useRef$1","useContext","Animate","render","start","end","complete","onComplete","easeType","onCompleteTimeRef","style","setStyle","assign","transition","parseFloat","setTimeout","clearTimeout","camelCaseToDash","camelCase","replace","c","toLowerCase","generateKeyframes","keyframes","animationLength","keyframe","keyframePercentage","toFixed","keys","isNaN","keyframeContent","acc","key","createStyle","animationName","createTag","styleTag","document","querySelector","index","setAttribute","head","appendChild","sheet","cssRules","insertRule","console","error","createRandomName","Math","random","toString","substr","deleteRules","deleteName","findIndex","name","deleteRule","getPlayState","useRef$2","useEffect$2","useContext$1","useState$2","AnimateKeyframes","direction","fillMode","iterationCount","animationNameRef","forward","styleTagRef","forceUpdate","result","animateState","pauseValue","animation","useState$3","useEffect$3","useRef$3","useAnimate","useMemo","isPlaying","setIsPlaying","onCompleteCallbackRef","playRef","isPlay","useAnimateKeyframes","isPaused","setIsPaused","useEffect$4","useState$4","useRef$4","createArrayWithNumbers","from","useAnimateGroup","defaultArray","map","_","styles","setStyles","setPlaying","animationNamesRef","forEach","animationRefWithOrder","delayDuration"],"mappings":"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","sourcesContent":["'use strict';\n\nObject.defineProperty(exports, '__esModule', { value: true });\n\nvar React = require('react');\n\n/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n\r\nfunction __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)\r\n            t[p[i]] = s[p[i]];\r\n    return t;\r\n}\n\nvar calculateTotalDuration = ({ duration = 0.3, delay = 0, overlay = 0, }) => duration + delay - overlay || 0;\n\nfunction getSequenceId(sequenceIndex, sequenceId, defaultValue) {\r\n    if (sequenceId === undefined && sequenceIndex === undefined)\r\n        return defaultValue || 0;\r\n    if (sequenceIndex && sequenceIndex >= 0)\r\n        return sequenceIndex;\r\n    if (sequenceId)\r\n        return sequenceId;\r\n    return 0;\r\n}\n\nconst { useState, useRef, useEffect } = React;\r\nconst AnimateContext = React.createContext({\r\n    animationStates: {},\r\n    register: (data) => { },\r\n});\r\nfunction AnimateGroup(props) {\r\n    const { play, sequences = [], children } = props;\r\n    const [animationStates, setAnimationStates] = useState();\r\n    const animationsRef = useRef({});\r\n    const register = (data) => {\r\n        const { sequenceIndex, sequenceId } = data;\r\n        if (sequenceId === undefined && sequenceIndex === undefined)\r\n            return;\r\n        animationsRef.current[getSequenceId(sequenceIndex, sequenceId)] = data;\r\n    };\r\n    useEffect(() => {\r\n        const sequencesToAnimate = Array.isArray(sequences) && sequences.length\r\n            ? sequences\r\n            : Object.values(animationsRef.current);\r\n        const localAnimationState = {};\r\n        (play ? sequencesToAnimate : [...sequencesToAnimate].reverse()).reduce((previous, current, currentIndex) => {\r\n            const { sequenceId, sequenceIndex } = current, restAttributes = __rest(current, [\"sequenceId\", \"sequenceIndex\"]);\r\n            const { duration: defaultDuration, delay, overlay } = restAttributes;\r\n            const id = getSequenceId(sequenceIndex, sequenceId, currentIndex);\r\n            const duration = defaultDuration || 0.3;\r\n            const currentTotalDuration = calculateTotalDuration({\r\n                duration,\r\n                delay,\r\n                overlay,\r\n            });\r\n            const totalDuration = currentTotalDuration + previous;\r\n            localAnimationState[id] = {\r\n                play,\r\n                pause: !play,\r\n                delay: currentIndex === 0\r\n                    ? delay || 0\r\n                    : delay\r\n                        ? currentTotalDuration\r\n                        : previous,\r\n                controlled: true,\r\n            };\r\n            return totalDuration;\r\n        }, 0);\r\n        setAnimationStates(localAnimationState);\r\n    }, [play]);\r\n    return (React.createElement(AnimateContext.Provider, { value: { animationStates, register } }, children));\r\n}\n\nvar secToMs = (ms) => (ms || 0) * 1000;\n\nconst { useEffect: useEffect$1, useState: useState$1, useRef: useRef$1, useContext } = React;\r\nfunction Animate(props) {\r\n    const { play, children, render, start, end, complete = '', onComplete, delay = 0, duration = 0.3, easeType = 'linear', sequenceId, sequenceIndex, } = props;\r\n    const onCompleteTimeRef = useRef$1({});\r\n    const [style, setStyle] = useState$1(start || {});\r\n    const { register, animationStates = {} } = useContext(AnimateContext);\r\n    const id = getSequenceId(sequenceIndex, sequenceId);\r\n    useEffect$1(() => {\r\n        if ((sequenceIndex !== undefined && sequenceIndex >= 0) || sequenceId)\r\n            register(props);\r\n    }, []);\r\n    useEffect$1(() => {\r\n        setStyle(Object.assign(Object.assign({}, (play || (animationStates[id] || {}).play ? end : start)), { transition: `all ${duration}s ${easeType} ${parseFloat((animationStates[id] || {}).delay || delay)}s` }));\r\n        if (play && (complete || onComplete)) {\r\n            onCompleteTimeRef.current = setTimeout(() => {\r\n                complete && setStyle(complete);\r\n                onComplete && onComplete();\r\n            }, secToMs(parseFloat((animationStates[id] || {}).delay || delay) + duration));\r\n        }\r\n        return () => {\r\n            // @ts-ignore\r\n            onCompleteTimeRef.current && clearTimeout(onCompleteTimeRef.current);\r\n        };\r\n    }, [\r\n        id,\r\n        animationStates,\r\n        play,\r\n        duration,\r\n        easeType,\r\n        delay,\r\n        onComplete,\r\n        start,\r\n        end,\r\n        complete,\r\n    ]);\r\n    return render ? render({ style }) : React.createElement(\"div\", { style: style }, children);\r\n}\n\nvar camelCaseToDash = (camelCase) => camelCase ? camelCase.replace(/[A-Z]/g, c => `-${c.toLowerCase()}`) : '';\n\nconst generateKeyframes = keyframes => {\r\n    const animationLength = keyframes.length;\r\n    return keyframes.reduce((previous, keyframe, currentIndex) => {\r\n        const keyframePercentage = animationLength === 2\r\n            ? currentIndex * 100\r\n            : parseFloat((100 / (animationLength - 1)).toFixed(2)) * currentIndex;\r\n        if (typeof keyframe === 'string') {\r\n            return `${previous} ${keyframePercentage}% {${keyframe}}`;\r\n        }\r\n        const keys = Object.keys(keyframe);\r\n        if (keys.length && isNaN(+keys[0])) {\r\n            const keyframeContent = keys.reduce((acc, key) => `${acc} ${camelCaseToDash(key)}: ${keyframe[key]};`, '');\r\n            return `${previous} ${keyframePercentage}% {${keyframeContent}}`;\r\n        }\r\n        return `${previous} ${Object.keys(keyframe)[0]}% {${Object.values(keyframe)[0]}}`;\r\n    }, '');\r\n};\r\nfunction createStyle({ keyframes, animationName, }) {\r\n    return `@keyframes ${animationName} {${generateKeyframes(keyframes)}}`;\r\n}\n\nfunction createTag({ keyframes, animationName, }) {\r\n    let styleTag = document.querySelector('style[data-id=rsi]');\r\n    let index = 0;\r\n    if (!styleTag) {\r\n        styleTag = document.createElement('style');\r\n        styleTag.setAttribute('data-id', 'rsi');\r\n        document.head.appendChild(styleTag);\r\n    }\r\n    try {\r\n        // @ts-ignore\r\n        index = styleTag.sheet.cssRules.length;\r\n    }\r\n    catch (e) {\r\n        index = 0;\r\n    }\r\n    try {\r\n        // @ts-ignore\r\n        styleTag.sheet.insertRule(createStyle({\r\n            keyframes,\r\n            animationName,\r\n        }), index);\r\n    }\r\n    catch (e) {\r\n        console.error('react simple animate, error found during insert style ', e); // eslint-disable-line no-console\r\n    }\r\n    return {\r\n        styleTag,\r\n        index,\r\n    };\r\n}\n\nvar createRandomName = () => `RSI-${Math.random()\r\n    .toString(36)\r\n    .substr(2, 9)}`;\n\nvar deleteRules = (sheet, deleteName) => {\r\n    const index = Object.values(sheet.cssRules).findIndex(({ name }) => name === deleteName);\r\n    if (index >= 0)\r\n        sheet.deleteRule(index);\r\n};\n\nvar getPlayState = (pause) => pause ? 'paused' : 'running';\n\nconst { useRef: useRef$2, useEffect: useEffect$2, useContext: useContext$1, useState: useState$2 } = React;\r\nfunction AnimateKeyframes(props) {\r\n    const { children, play = false, pause = false, render, duration = 0.3, delay = 0, easeType = 'linear', direction = 'normal', fillMode = 'none', iterationCount = 1, sequenceIndex, keyframes, sequenceId, } = props;\r\n    const animationNameRef = useRef$2({\r\n        forward: '',\r\n        reverse: '',\r\n    });\r\n    const controlled = useRef$2(false);\r\n    const styleTagRef = useRef$2({\r\n        forward: { sheet: {} },\r\n        reverse: { sheet: {} },\r\n    });\r\n    const id = getSequenceId(sequenceIndex, sequenceId);\r\n    const { register, animationStates = {} } = useContext$1(AnimateContext);\r\n    const forceUpdate = useState$2(false)[1];\r\n    useEffect$2(() => {\r\n        animationNameRef.current.forward = createRandomName();\r\n        let result = createTag({\r\n            animationName: animationNameRef.current.forward,\r\n            keyframes,\r\n        });\r\n        styleTagRef.current.forward = result.styleTag;\r\n        animationNameRef.current.reverse = createRandomName();\r\n        result = createTag({\r\n            animationName: animationNameRef.current.reverse,\r\n            keyframes: keyframes.reverse(),\r\n        });\r\n        styleTagRef.current.reverse = result.styleTag;\r\n        register(props);\r\n        if (play)\r\n            forceUpdate(true);\r\n        return () => {\r\n            deleteRules(styleTagRef.current.forward.sheet, animationNameRef.current.forward);\r\n            deleteRules(styleTagRef.current.reverse.sheet, animationNameRef.current.reverse);\r\n        };\r\n    }, []);\r\n    const animateState = animationStates[id] || {};\r\n    let pauseValue = false;\r\n    if (animateState.controlled && !controlled.current) {\r\n        pauseValue = animateState.pause;\r\n        if (!animateState.pause)\r\n            controlled.current = true;\r\n    }\r\n    else {\r\n        pauseValue = pause;\r\n    }\r\n    const style = {\r\n        animation: `${duration}s ${easeType} ${animateState.delay ||\r\n            delay}s ${iterationCount} ${direction} ${fillMode} ${getPlayState(pauseValue)} ${((animateState.controlled\r\n            ? animateState.play\r\n            : play)\r\n            ? animationNameRef.current.forward\r\n            : animationNameRef.current.reverse) || ''}`,\r\n    };\r\n    return render ? render({ style }) : React.createElement(\"div\", { style: style || {} }, children);\r\n}\n\nconst { useState: useState$3, useEffect: useEffect$3, useRef: useRef$3 } = React;\r\nfunction useAnimate(props) {\r\n    const { start, end, complete, onComplete, delay = 0, duration = 0.3, easeType = 'linear', } = props;\r\n    const transition = React.useMemo(() => `all ${duration}s ${easeType} ${delay}s`, [duration, easeType, delay]);\r\n    const [style, setStyle] = useState$3(Object.assign(Object.assign({}, start), { transition }));\r\n    const [isPlaying, setIsPlaying] = useState$3(false);\r\n    const onCompleteTimeRef = useRef$3();\r\n    const onCompleteCallbackRef = useRef$3(onComplete);\r\n    const playRef = useRef$3();\r\n    useEffect$3(() => {\r\n        onCompleteCallbackRef.current = onComplete;\r\n    }, [onComplete]);\r\n    useEffect$3(() => () => {\r\n        onCompleteTimeRef.current && clearTimeout(onCompleteTimeRef.current);\r\n    }, []);\r\n    if (!playRef.current) {\r\n        playRef.current = (isPlay) => {\r\n            setStyle(Object.assign(Object.assign({}, (isPlay ? end : start)), { transition }));\r\n            setIsPlaying(true);\r\n            onCompleteTimeRef.current = setTimeout(() => {\r\n                if (isPlay && (complete || onComplete)) {\r\n                    complete && setStyle(complete);\r\n                    onCompleteCallbackRef.current && onCompleteCallbackRef.current();\r\n                }\r\n                setIsPlaying(false);\r\n            }, secToMs(delay + duration));\r\n        };\r\n    }\r\n    return {\r\n        isPlaying,\r\n        style,\r\n        play: playRef.current,\r\n    };\r\n}\n\nfunction useAnimateKeyframes(props) {\r\n    const { duration = 0.3, delay = 0, easeType = 'linear', direction = 'normal', fillMode = 'none', iterationCount = 1, keyframes, } = props;\r\n    const animationNameRef = React.useRef({\r\n        forward: '',\r\n        reverse: '',\r\n    });\r\n    const styleTagRef = React.useRef({\r\n        forward: { sheet: {} },\r\n        reverse: { sheet: {} },\r\n    });\r\n    const { register } = React.useContext(AnimateContext);\r\n    const [isPlaying, setIsPlaying] = React.useState(true);\r\n    const [isPaused, setIsPaused] = React.useState(false);\r\n    const playRef = React.useRef();\r\n    React.useEffect(() => {\r\n        animationNameRef.current.forward = createRandomName();\r\n        let result = createTag({\r\n            animationName: animationNameRef.current.forward,\r\n            keyframes,\r\n        });\r\n        styleTagRef.current.forward = result.styleTag;\r\n        animationNameRef.current.reverse = createRandomName();\r\n        result = createTag({\r\n            animationName: animationNameRef.current.reverse,\r\n            keyframes: keyframes.reverse(),\r\n        });\r\n        styleTagRef.current.reverse = result.styleTag;\r\n        register(props);\r\n        return () => {\r\n            deleteRules(styleTagRef.current.forward.sheet, animationNameRef.current.forward);\r\n            deleteRules(styleTagRef.current.reverse.sheet, animationNameRef.current.reverse);\r\n        };\r\n    }, []);\r\n    playRef.current = playRef.current ? playRef.current : (isPlay) => {\r\n        setIsPlaying(isPlay);\r\n    };\r\n    const pause = (isPaused) => {\r\n        setIsPaused(isPaused);\r\n    };\r\n    const style = {\r\n        animation: `${duration}s ${easeType} ${delay}s ${iterationCount} ${direction} ${fillMode} ${getPlayState(isPaused)} ${(isPlaying\r\n            ? animationNameRef.current.forward\r\n            : animationNameRef.current.reverse) || ''}`,\r\n    };\r\n    return {\r\n        style,\r\n        play: playRef.current,\r\n        pause,\r\n        isPlaying,\r\n    };\r\n}\n\nconst { useEffect: useEffect$4, useState: useState$4, useRef: useRef$4 } = React;\r\nfunction createArrayWithNumbers(length) {\r\n    return Array.from({ length }, () => null);\r\n}\r\nfunction useAnimateGroup(props) {\r\n    const { sequences = [] } = props;\r\n    const defaultArray = createArrayWithNumbers(sequences.length).map((_, index) => props.sequences[index].start);\r\n    const [styles, setStyles] = useState$4(defaultArray);\r\n    const [isPlaying, setPlaying] = useState$4(false);\r\n    const animationNamesRef = useRef$4([]);\r\n    const styleTagRef = useRef$4([]);\r\n    const playRef = useRef$4();\r\n    useEffect$4(() => {\r\n        sequences.forEach(({ keyframes = false }, i) => {\r\n            if (!Array.isArray(keyframes))\r\n                return;\r\n            if (!animationNamesRef.current[i]) {\r\n                animationNamesRef.current[i] = {};\r\n                styleTagRef.current[i] = {};\r\n            }\r\n            animationNamesRef.current[i].forward = createRandomName();\r\n            let result = createTag({\r\n                animationName: animationNamesRef.current[i].forward,\r\n                keyframes,\r\n            });\r\n            styleTagRef.current[i].forward = result.styleTag;\r\n            animationNamesRef.current[i].reverse = createRandomName();\r\n            result = createTag({\r\n                animationName: animationNamesRef.current[i].reverse,\r\n                keyframes: keyframes.reverse(),\r\n            });\r\n            styleTagRef.current[i].reverse = result.styleTag;\r\n        });\r\n        return () => {\r\n            Object.values(animationNamesRef).forEach(({ forward, reverse }, i) => {\r\n                if (!styleTagRef[i])\r\n                    return;\r\n                deleteRules(styleTagRef[i].sheet, forward);\r\n                deleteRules(styleTagRef[i].sheet, reverse);\r\n            });\r\n        };\r\n    }, []);\r\n    playRef.current = playRef.current\r\n        ? playRef.current\r\n        : (isPlay) => {\r\n            let totalDuration = 0;\r\n            const animationRefWithOrder = isPlay\r\n                ? animationNamesRef.current\r\n                : [...animationNamesRef.current].reverse();\r\n            const styles = (isPlay ? sequences : [...sequences].reverse()).map((current, currentIndex) => {\r\n                const { duration = 0.3, delay = 0, overlay, keyframes, iterationCount = 1, easeType = 'linear', direction = 'normal', fillMode = 'none', end = {}, start = {}, } = current;\r\n                const delayDuration = currentIndex === 0 ? delay : totalDuration;\r\n                const transition = `all ${duration}s ${easeType} ${delayDuration}s`;\r\n                totalDuration =\r\n                    calculateTotalDuration({ duration, delay, overlay }) +\r\n                        totalDuration;\r\n                return keyframes\r\n                    ? {\r\n                        animation: `${duration}s ${easeType} ${delayDuration}s ${iterationCount} ${direction} ${fillMode} running ${isPlay\r\n                            ? animationRefWithOrder[currentIndex].forward\r\n                            : animationRefWithOrder[currentIndex].reverse}`,\r\n                    }\r\n                    : Object.assign(Object.assign({}, (isPlay ? end : start)), { transition });\r\n            });\r\n            // @ts-ignore\r\n            setStyles(isPlay ? styles : [...styles].reverse());\r\n            setPlaying(!isPlaying);\r\n        };\r\n    return { styles, play: playRef.current, isPlaying };\r\n}\n\nexports.Animate = Animate;\nexports.AnimateGroup = AnimateGroup;\nexports.AnimateKeyframes = AnimateKeyframes;\nexports.useAnimate = useAnimate;\nexports.useAnimateGroup = useAnimateGroup;\nexports.useAnimateKeyframes = useAnimateKeyframes;\n"]},"metadata":{},"sourceType":"script"}